*gfold.txt*                             switch and get repo status using gfold

==============================================================================
Table of Contents                                    *gfold-table-of-contents*

1. nvim-gfold.lua                                       |gfold-nvim-gfold.lua|
  - Pictures                                                  |gfold-pictures|
  - Install                                                    |gfold-install|
  - Config                                                      |gfold-config|
  - Usage                                                        |gfold-usage|

==============================================================================
1. nvim-gfold.lua                                       *gfold-nvim-gfold.lua*

`nvim` plugin for gfold <https://github.com/nickgerace/gfold> currently
providing: * A picker to change `cwd`. This uses `vim.ui.select`. To have a
nice ui for example dressing.nvim <https://github.com/stevearc/dressing.nvim>
can be used. * A function to get a summary that can be used in statuslines, eg
lualine.nvim <https://github.com/nvim-lualine/lualine.nvim>.

PICTURES                                                      *gfold-pictures*

PICKER ~

<div class="figure">
<img src="https://user-images.githubusercontent.com/23341710/155687823-947535c8-e271-4e8f-a924-be2b7bc29708.png" title="fig:"/>
<p class="caption">gscreenshot_2022-02-25-095346</p>
</div>

STATUSLINE ~

<div class="figure">
<img src="https://user-images.githubusercontent.com/23341710/155844731-13a82e4e-f74e-47a9-a677-7c696c731169.png" title="fig:"/>
<p class="caption">gscreenshot_2022-02-26-140848</p>
</div>

INSTALL                                                        *gfold-install*

>
    use {
      "AckslD/nvim-gfold.lua",
      config = function()
        require('gfold').setup()
      end,
    }
<


CONFIG                                                          *gfold-config*

Pass a table to `require('gfold').setup()`. The following are the default
values:

>
    {
      -- base directory to look for repos
      -- defaults to home
      cwd = vim.fn.getenv('HOME'),
    
      -- What symbols to use, for both picker and status
      status_symbols = {
        clean = '✔',
        unclean = '✘',
        unpushed = '',
        bare = '',
      },
    
      -- settings specific to the picker
      picker = {
        -- how to format an entry in the picker
        -- default will be something like:
        --   ✔ nvim-gfold.lua (/home/path/to/nvim-gfold.lua)
        format_item = function(repo)
          return string.format(
          '%s %s (%s)',
          require('gfold.settings').status_symbols[repo.status],
          repo.name,
          repo.path
          )
        end,
    
        -- what to do when selecting a repo
        -- by default changes cwd
        on_select = require('gfold.actions').change_cwd,
      },
    
      -- settings specific to the status(line)
      status = {
        -- if we should continuously update the summary
        enable = true,
    
        -- how long to wait in between querying repo statuses
        -- NOTE this is the time from the last process ran until starting it again
        -- so the interval will be whatever time it takes to run gfold plus this setting
        -- Default is 5 seconds but if for some reason you want this to be updated more frequently
        -- you can always make this value smaller.
        update_delay = 5000,
    
        -- What color of highlights to use
        -- Values are either:
        --   * string: a highlight group
        --   * table: eg `{fg = '#b8bb26'}`
        colors = {
          clean = {fg = '#b8bb26'},
          unclean = {fg = '#fb4934'},
          unpushed = {fg = '#fe8019'},
          bare = {fg = '#fabd2f'},
        },
    
        -- In which order to show the components of the summary
        order = {
          'clean',
          'unclean',
          'unpushed',
          'bare',
        },
      },
    }
<


USAGE                                                            *gfold-usage*

PICKER ~

To pick a repo:

>
    :lua require('gfold').pick_repo()
<


Optionally you can filter the repos you want to show by including a condition
callback. For example:

>
    require('gfold').pick_repo(function(repo)
      return repo.status ~= 'clean'
    end)
<


which would only include non-clean repos in the picker. `repo` is a table with
the keys: * `status` * `path` * `remote` * `user`

STATUSLINE ~

                                                               *gfold-Lualine*

Lualine                                To use `lualine` you can simply do eg:


>
    require('lualine').setup({
      ...
      sections = {
        ...
        lualine_x = {
          ...
          'gfold',
          ...
        },
        ...
      },
      ...
    })
<


                                                                *gfold-Others*

Others                                 For other statuslines you can call
                                       `require('gfold').get_summary` which
                                       returns a table of the form:


>
    {
      unclean = <int>,
      clean = <int>,
      bare = <int>,
      unpushed = <int>,
    }
<


which you can use to format a summary to your liking.

NOTE that `get_summary` does not update the current summary (ie does not
trigger `gfold`), it just looks up the current known information. This means
`get_summary` is a quick function and you can easily call it often. Instead,
`nvim-gfold` will continuously update this information in the background, see
settings
<https://github.com/AckslD/nvim-gfold.lua/tree/main/lua/gfold/settings.lua> for
more information.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
